data <- read.table('car.dat')
help("read.table")
data <- read.table('car.dat')
print(data)
install.packages("rpart")
library("rpart)
data <- read.table('car.dat')
library("rpart")
library("rpart")
data <- read.table('car.dat')
help("rpart")
library("rpart")
data <- read.table('car.dat',sep=",")
library("rpart")
dados <- read.table('car.dat',sep=",")
arvore <- rpart(Classe ~ At1 + At2 + At3 + At4 + At5 + At6, data = data, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
library("rpart")
dados <- read.table('car.dat',sep=",")
arvore <- rpart(Classe ~ At1 + At2 + At3 + At4 + At5 + At6, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
library("rpart")
dados <- read.csv('forestfires.csv')
library("rpart")
dados <- read.table('car.dat',header=TRUE,sep=",")
arvore <- rpart(Classe ~ buying + maint + doors + persons + lug_boot + safety, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
library("rpart")
dados <- read.table('car.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ buying + maint + doors + persons + lug_boot + safety, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
install.packages(“rpart.plot”)
install.packages("rpart.plot")
library("rpart")
library("rpart.plot")
dados <- read.table('car.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ buying + maint + doors + persons + lug_boot + safety, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
help("rpart.plot")
library("rpart")
library("rpart.plot")
dados <- read.table('car.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ buying + maint + doors + persons + lug_boot + safety, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=2)
library("rpart")
library("rpart.plot")
dados <- read.table('iris.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ buying + maint + doors + persons + lug_boot + safety, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
library("rpart")
library("rpart.plot")
dados <- read.table('iris.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
library("rpart")
library("rpart.plot")
dados <- read.table('iris.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=2)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=2)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
help("predict")
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados)
View(teste)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados)
matplot(teste)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados)
print(teste)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados)
teste_plot <- rpart.plot(teste,type=3)
teste <- predict(arvore,data=dados)
print(type(teste))
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados,type="class")
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados,type="class")
print(teste)
teste <- predict(arvore,data=dados,type="class")
print(typeof(teste))
teste <- predict(arvore,data=dados,type="class")
print(teste[1])
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados,type="class")
print(teste[1][1])
dados <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados,type="class")
plot(teste)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados_teste,type="class")
plot(teste)
teste <- predict(arvore,data=dados_teste,type="class")
plot(teste)
View(dados_teste)
View(dados_teste)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados_teste,type="class")
plot(teste)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados_teste,type="class")
print(teste)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados_teste,type="class")
print(teste["Iris-setosa"])
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados_teste,type="class")
table(teste)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,data=dados_teste,type="class")
table(teste)
library("rpart")
library("rpart.plot")
dados <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="class")
table(teste)
dados_treina <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados_treina, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="class")
table(teste)
library("rpart")
library("rpart.plot")
dados_treina <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados_treina, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="class")
table(teste)
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="class")
table(teste)
print(teste)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="class")
table(teste)
print(teste)
library("rpart")
library("rpart.plot")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=2)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
library("rpart")
library("rpart.plot")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
View(dados_treina)
View(data)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=2)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('foresfires_teste.dat',header=TRUE,sep=",")
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
table(teste)
print(teste)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area + X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
table(teste)
print(teste)
library("rpart")
library("rpart.plot")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova"
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
arvore <- rpart(area ~ X + Y + month + day + FFMC + DMC + DC + ISI + temp + RH + wind + rain, data = dados_treina, method = "anova")
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
table(teste)
print(teste)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
table(teste)
printcp(teste)
printcp(arvore)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova")
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
table(teste)
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
table(teste)
print(teste)
library("rpart")
library("rpart.plot")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
print(teste)
dados_treina <- read.table('car_treina.dat',header=TRUE,sep=",")
arvore <- rpart(price ~ symboling + normalized-losses + make + fuel-type + aspiration + num-of-doors + body-style + drive-wheels + engine-location + wheel-base + length + width + height + curb-weight + engine-type + num-of-cylinders + engine-size + fuel-system + bore + stroke + compression-ratio + horsepower + peak-rpm + city-mpg + highway-mpg, data = dados_treina, method = "anova",parms = list(split = "Information"))
dados_treina <- read.table('car_treina.dat',header=TRUE,sep=",")
arvore <- rpart(price ~ symboling + normalized-losses + make + fuel-type + aspiration + num-of-doors + body-style + drive-wheels + engine-location + wheel-base + length + width + height + curb-weight + engine-type + num-of-cylinders + engine-size + fuel-system + bore + stroke + compression-ratio + horsepower + peak-rpm + city-mpg + highway-mpg, data = dados_treina, method = "anova",parms = list(split = "Information"))
dados_treina <- read.table('car_treina.dat',header=TRUE,sep=",")
arvore <- rpart(price ~ symboling + normalized-losses + make + fuel-type + aspiration + num-of-doors + body-style + drive-wheels + engine-location + wheel-base + length + width + height + curb-weight + engine-type + num-of-cylinders + engine-size + fuel-system + bore + stroke + compression-ratio + horsepower + peak-rpm + city-mpg + highway-mpg, data = dados_treina, method = "anova",parms = list(split = "Information"))
dados_treina <- read.table('car_treina.dat',header=TRUE,sep=",")
arvore <- rpart(price ~ symboling + normalized-losses + make + fuel-type + aspiration + num-of-doors + body-style + drive-wheels + engine-location + wheel-base + length + width + height + curb-weight + engine-type + num-of-cylinders + engine-size + fuel-system + bore + stroke + compression-ratio + horsepower + peak-rpm + city-mpg + highway-mpg, data = dados_treina, method = "anova",parms = list(split = "Information"))
arvore <- rpart(price ~ symboling + normalized-losses + make + fuel-type + aspiration + num-of-doors + body-style + drive-wheels + engine-location + wheel-base + length + width + height + curb-weight + engine-type + num-of-cylinders + engine-size + fuel-system + bore + stroke + compression-ratio + horsepower + peak-rpm + city-mpg + highway-mpg, data = dados_treina, method = "anova",parms = list(split = "Information"))
arvore <- rpart(price ~ symboling + normalized + make + fuel + aspiration + doors + body + drivewheels + enginelocation + wheelbase + length + width + height + curbweight + enginetype + numofcylinders + enginesize + fuelsystem + bore + stroke + compressionratio + horsepower + peakrpm + citympg + highwaympg, data = dados_treina, method = "anova",parms = list(split = "Information"))
arvore <- rpart(price ~ symboling + normalized + make + fuel + aspiration + doors + body + drivewheels + enginelocation + wheelbase + length + width + height + curbweight + enginetype + numofcylinders + enginesize + fuelsystem + bore + stroke + compressionratio + horsepower + peakrpm + citympg + highwaympg, data = dados_treina, method = "anova",parms = list(split = "Information"))
dados_treina <- read.table('car_treina.dat',header=TRUE,sep=",")
arvore <- rpart(price ~ symboling + normalized + make + fuel + aspiration + doors + body + drivewheels + enginelocation + wheelbase + length + width + height + curbweight + enginetype + numofcylinders + enginesize + fuelsystem + bore + stroke + compressionratio + horsepower + peakrpm + citympg + highwaympg, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('car_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
print(teste)
dados_teste <- read.table('car_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
arvore <- rpart(price ~ symboling + normalized + make + fuel + aspiration + doors + body + drivewheels + enginelocation + wheelbase + length + width + height + curbweight + enginetype + numofcylinders + enginesize + fuelsystem + bore + stroke + compressionratio + horsepower + peakrpm + citympg + highwaympg, data = dados_treina, method = "anova",parms = list(split = "Information"))
library("rpart")
library("rpart.plot")
dados_treina <- read.table('car_treina.dat',header=TRUE,sep=",")
arvore <- rpart(price ~ symboling + normalized + make + fuel + aspiration + doors + body + drivewheels + enginelocation + wheelbase + length + width + height + curbweight + enginetype + numofcylinders + enginesize + fuelsystem + bore + stroke + compressionratio + horsepower + peakrpm + citympg + highwaympg, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('car_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
arvore <- rpart(price ~ symboling + normalized + make + fuel + aspiration + doors + body + drivewheels + enginelocation + wheelbase + length + width + height + curbweight + enginetype + numofcylinders + enginesize + fuelsystem + bore + stroke + compressionratio + horsepower + peakrpm + citympg + highwaympg, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('car_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste)
print(teste)
teste <- predict(arvore,dados_teste)
dados_treina <- read.table('forestfire_treina.dat',header=TRUE,sep=",")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
print(teste)
teste <- predict(arvore,dados_teste,type="vector")
write.csv(teste,file="result_teste_fire.csv")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste_2.dat',header=TRUE,sep=",")
dados_teste <- read.table('forestfires_teste2.dat',header=TRUE,sep=",")
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
dados_teste <- read.table('teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
write.csv(teste,file="result_teste_fire.csv")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_tteste.dat',header=TRUE,sep=",")
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
write.csv(teste,file="result_teste_fire.csv")
library("rpart")
library("rpart.plot")
dados_treina <- read.table('iris_treina.dat',header=TRUE,sep=",")
arvore <- rpart(classe ~ sepal_length +  sepal_width + petal_length +  petal_width, data = dados_treina, method = "class", control = rpart.control(minsplit = 1), parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('iris_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="class")
write.csv(teste,file="result_teste_iris.csv")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
write.csv(teste,file="result_teste_fire.csv")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
teste <- predict(arvore,dados_teste,type="vector")
write.csv(teste,file="result_teste_fire.csv")
#PLOTA arvore criada
plot_arvore <- rpart.plot(arvore, type=3)
#PLOTA arvore criada
plot_arvore <- rpart.plot(arvore, type=3)
library("rpart")
library("rpart.plot")
dados_treina <- read.table('forestfires_treina.dat',header=TRUE,sep=",")
arvore <- rpart(temp ~ X + Y + month + day + FFMC + DMC + DC + ISI + RH + wind + rain + area, data = dados_treina, method = "anova",parms = list(split = "Information"))
plot_arvore <- rpart.plot(arvore, type=3)
dados_teste <- read.table('forestfires_teste.dat',header=TRUE,sep=",")
